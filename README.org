* Intro
This project is a work in progress, but the goal is to make a hanging vplotter robot that is completely self contained and is controlled by the esp32. It uses 2 DC motors with encoders instead of the usual stepper motors.

Currently, the project controls 2 motors with PID control loops, which will be the foundation for the project going forward. The parameters of PID loops and the set points can be modified from the web debug interface. (It is not a pretty interface, and it is pretty confusing, but it does allow for quick experimentation.) The web interface uses websockets to allow quick message exchanges from the esp32 and a web browser. This feature allows the webpage to graph realtime values of variables and modify them as needed.

I am working on converting this project to C++ to make the code cleaner (and to gain experience using C++). This should result in cleaner, easier to read code, and potentially allow others to utilize portions of it (especially the debug ability) in other projects.


* TODO:
- Convert to C++
- Finish supporting 2 motors/encoders
- Design and build physical frame/wheels of the robot.
- integrate esp portion and webInterface portion
- Clean up the debug page and make it nicer
  - Such as having the graph choose different colors for each variable [DONE]
  - Tickmarks for both axis
  - autoscale

* Ideas: (AKA notes to self)
  PID loop (keep motors at specified location)
  Something that takes in a path and generates points to feed to PID loop
  Path generation (maybe 2 parts) (given gcode, output stuff to ...


  position control (PID, motor control)
  motion planing (generate points for ^, controls velocity, acceleration, etc.)
  path planning (decides path robot will take to draw given
  path generation (from images, patterns, spirography, [[https://www.youtube.com/watch?v=_5So027H_fM][Lissajous]])


* Notes
  Make sure espfs is on v0.9.0. The most recent versions change how the 'espFsOpen' function is called.
